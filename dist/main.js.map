{"version":3,"file":"main.js","mappings":"yBAGAA,SAASC,iBAAiB,oBAAoB,MCHvC,WACH,MAGMC,EAAMC,GAAGC,OAAO,OAEhBC,EAAaF,GAAGG,cACjBC,MAAM,KACNC,UAAU,CAACC,IAND,IAMqB,MAC9BC,EAAgBP,GAAGQ,UACpBN,WAAWA,GAEhBF,GAAGS,IAAI,sDACFC,MAAKC,IACF,MAAMC,EAAc,CAAC,EACrBD,EAAQE,SAAQC,IACZF,EAAYE,EAAEC,QAAUD,EAAEE,IAAI,IAGlChB,GAAGiB,KAAK,kEACHP,MAAKQ,IACF,MAAMC,EAAYC,SAASC,QAAQH,EAAMA,EAAKI,QAAQH,WACtDpB,EAAIwB,UAAU,QACTL,KAAKC,EAAUK,UACfC,QAAQC,OAAO,QACfC,KAAK,QAAS,WACdA,KAAK,IAAKpB,GACVoB,KAAK,MAAMb,GAAKA,EAAEC,SAClBa,GAAG,SAAS,SAASd,GAClB,MAAMe,EAAUf,EAAEgB,OAAOC,SAASC,WAAWhB,KACvCiB,EAAQjC,GAAGC,OAAO,UACxBgC,EAAMhC,OAAO,MAAMiC,KAAKL,GACxBI,EAAME,MAAM,UAAW,QAC3B,IACCT,OAAO,SACPQ,MAAKpB,GAAKF,EAAYE,EAAEsB,KAAI,GACnC,GAElB,CD3BIC,EAAW,G","sources":["webpack://xchngd/./src/index.js","webpack://xchngd/./src/scripts/map.js"],"sourcesContent":["import Example from \"./scripts/example\";\nimport { renderMap } from \"./scripts/map\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // console.log(\"Hello World\")\n    // create an html element we can grab on\n    // const main = document.getElementById(\"main\");\n    // // create new instance of d3 element in here\n    // // dont add a lot of code to this file\n    // new Example(main)\n    \n    renderMap()\n});","export function renderMap() {\n    const width = 1650;\n    const height = 800;\n\n    const svg = d3.select('svg');\n    \n    const projection = d3.geoMercator()\n        .scale(194)\n        .translate([width / 2, height / 1.4]);\n    const pathGenerator = d3.geoPath()\n        .projection(projection);\n\n    d3.tsv('https://unpkg.com/world-atlas@1.1.4/world/110m.tsv')\n        .then(tsvData => {\n            const countryName = {}\n            tsvData.forEach(d => {\n                countryName[d.iso_n3] = d.name\n            })\n            // d3.json('https://unpkg.com/world-atlas@1.1.4/world/110m.json')\n            d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json')\n                .then(data => {\n                    const countries = topojson.feature(data, data.objects.countries);\n                    svg.selectAll('path')\n                        .data(countries.features)\n                        .enter().append('path')\n                        .attr('class', 'country')\n                        .attr('d', pathGenerator)\n                        .attr('id', d => d.iso_n3)\n                        .on('click', function(d) {\n                            const country = d.target.__data__.properties.name\n                            const modal = d3.select('#modal');\n                            modal.select('h2').text(country);\n                            modal.style('display', 'block');\n                        })\n                        .append('title')\n                        .text(d => countryName[d.id])\n                });\n        })\n}"],"names":["document","addEventListener","svg","d3","select","projection","geoMercator","scale","translate","width","pathGenerator","geoPath","tsv","then","tsvData","countryName","forEach","d","iso_n3","name","json","data","countries","topojson","feature","objects","selectAll","features","enter","append","attr","on","country","target","__data__","properties","modal","text","style","id","renderMap"],"sourceRoot":""}