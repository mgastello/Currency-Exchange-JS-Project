{"version":3,"file":"main.js","mappings":"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","sources":["webpack://xchngd/webpack/bootstrap","webpack://xchngd/./src/scripts/modal.js","webpack://xchngd/./src/scripts/map.js","webpack://xchngd/./src/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const openModalButtons = document.querySelectorAll('.country')\nconst closeModalButtons = document.querySelectorAll('data-close-button')\n// const overlay = document.getElementById('overlay')\n\nopenModalButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        const modal = document.getElementById('modal')\n        openModal(modal)\n    })\n})\n\ncloseModalButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        const modal = button.closest('.modal')\n        closeModal(modal)\n    })\n})\n\n// overlay.addEventListener('click', () => {\n//     const modals = document.querySelectorAll('.modal.active')\n//     modals.forEach(modal => {\n//         closeModal(modal)\n//     })\n// })\n\nexport function openModal(modal) {\n    modal.classList.add('active')\n    // overlay.classList.add('active')\n}\n\nexport function closeModal(modal) {\n    modal.classList.remove('active')\n    // overlay.classList.remove('active')\n}","import { openModal, closeModal } from \"./modal\";\nconst codes = require(\"./country-currency-codes.json\")\nconst names = require(\"./country-currency-names.json\")\nconst symbols = require(\"./country-currency-symbols.json\")\n\nexport function renderMap() {\n    const width = 1650;\n    const height = 800;\n\n    const svg = d3.select('svg');\n    \n    const projection = d3.geoMercator()\n        .scale(194)\n        .translate([width / 2, height / 1.4]);\n    const pathGenerator = d3.geoPath()\n        .projection(projection);\n\n    d3.tsv('https://unpkg.com/world-atlas@1.1.4/world/110m.tsv')\n        .then(tsvData => {\n            const countryName = {}\n            tsvData.forEach(d => {\n                countryName[d.iso_n3] = d.name\n            })\n            d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json')\n                .then(data => {\n                    const countries = topojson.feature(data, data.objects.countries);\n                    svg.selectAll('path')\n                        .data(countries.features)\n                        .enter().append('path')\n                        .attr('class', 'country')\n                        .attr('d', pathGenerator)\n                        .attr('id', d => d.iso_n3)\n                        .on('click', function(d) {\n                            const country = d.target.__data__.properties.name\n                            openModal(modal)\n                            overlay.classList.add('active')\n                            const modalName = d3.select('#modal')\n                            modalName.select('h2').text(country)\n                            const cCode = codes[country] != undefined ? codes[country] : `No Data`\n                            const cName = names[country] != undefined ? names[country] : `No Data`\n                            const cSymbol = symbols[country] != undefined ? symbols[country] : `No Data`\n                            data2.then((data) => {\n                                const value = data.results[cCode] != undefined ? data.results[cCode] : `No Data`\n                                if (value !== `No Data`) {\n                                    modalName.select('p4').text(`1 USD equals ${value.toFixed(2)} ${cCode}`)\n                                } else {\n                                    modalName.select('p4').text(`No conversion data to ${cCode}`)\n                                }\n                            })\n                            modalName.select('p1').text(`Currency Name: ${cName}`)\n                            modalName.select('p2').text(`Currency Symbol: ${cSymbol}`)\n                            modalName.select('p3').text(`Currency Code: ${cCode}`)\n                        })\n                        .append('title')\n                        .text(d => countryName[d.id])\n                });\n                const closeModalButtons = document.querySelectorAll('[data-close-button]')\n                    closeModalButtons.forEach(button => {\n                        button.addEventListener('click', () => {\n                            const modal = button.closest('.modal')\n                            closeModal(modal)\n                        })\n                    })\n            })\n        }","import { renderMap } from \"./scripts/map\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    renderMap()\n\n    const openModalButtons = document.querySelectorAll('[data-modal-target]')\n    const closeModalButtons = document.querySelectorAll('[data-close-button]')\n    const overlay = document.getElementById('overlay')\n\n    openModalButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const modal = document.querySelector(button.dataset.modalTarget)\n            openModal(modal)\n        })\n    })\n\n    overlay.addEventListener('click', () => {\n        const modals = document.querySelectorAll('.modal.active')\n        modals.forEach(modal => {\n            closeModal(modal)\n        })\n    })\n\n    closeModalButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const modal = button.closest('.modal')\n\n            closeModal(modal)\n        })\n    })\n\n    function openModal(modal) {\n        modal.classList.add('active')\n        overlay.classList.add('active')\n    }\n\n    function closeModal(modal) {\n        \n        modal.classList.remove('active')\n        overlay.classList.remove('active')\n    }\n    \n});"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","openModalButtons","document","querySelectorAll","closeModalButtons","openModal","modal","classList","add","closeModal","remove","forEach","button","addEventListener","getElementById","closest","codes","require","names","symbols","renderMap","svg","d3","select","projection","geoMercator","scale","translate","width","pathGenerator","geoPath","tsv","then","tsvData","countryName","d","iso_n3","name","json","data","countries","topojson","feature","objects","selectAll","features","enter","append","attr","on","country","target","__data__","properties","overlay","modalName","text","cCode","cName","cSymbol","data2","value","results","toFixed","id","querySelector","dataset","modalTarget"],"sourceRoot":""}