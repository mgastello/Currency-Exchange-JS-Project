{"version":3,"file":"main.js","mappings":"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","sources":["webpack://xchngd/webpack/bootstrap","webpack://xchngd/./src/scripts/modal.js","webpack://xchngd/./src/scripts/api.js","webpack://xchngd/./src/scripts/map.js","webpack://xchngd/./src/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const openModalButtons = document.querySelectorAll('.country')\nconst closeModalButtons = document.querySelectorAll('data-close-button')\n// const overlay = document.getElementById('overlay')\n\nopenModalButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        const modal = document.getElementById('modal')\n        openModal(modal)\n    })\n})\n\ncloseModalButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        const modal = button.closest('.modal')\n        closeModal(modal)\n    })\n})\n\n// overlay.addEventListener('click', () => {\n//     const modals = document.querySelectorAll('.modal.active')\n//     modals.forEach(modal => {\n//         closeModal(modal)\n//     })\n// })\n\nexport function openModal(modal) {\n    modal.classList.add('active')\n    // overlay.classList.add('active')\n}\n\nexport function closeModal(modal) {\n    modal.classList.remove('active')\n    // overlay.classList.remove('active')\n}","const options = {method: 'GET', headers: {accept: 'application/json'}};\n\nexport const data2 = fetch('https://api.fastforex.io/fetch-all?api_key=5a8e449c94-fbe0b8a6b0-rr9hum', options)\n  .then(response => response.json())\n  .then(response => response)\n  .catch(err => console.error(err));","import { openModal, closeModal } from \"./modal\";\nconst data1 = require(\"./country-currency-codes.json\")\nimport { data2 } from \"./api\";\nconst data3 = require(\"./country-currency-names.json\")\n\nexport function renderMap() {\n    const width = 1650;\n    const height = 800;\n\n    const svg = d3.select('svg');\n    \n    const projection = d3.geoMercator()\n        .scale(194)\n        .translate([width / 2, height / 1.4]);\n    const pathGenerator = d3.geoPath()\n        .projection(projection);\n\n    d3.tsv('https://unpkg.com/world-atlas@1.1.4/world/110m.tsv')\n        .then(tsvData => {\n            const countryName = {}\n            tsvData.forEach(d => {\n                countryName[d.iso_n3] = d.name\n            })\n            d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json')\n                .then(data => {\n                    const countries = topojson.feature(data, data.objects.countries);\n                    svg.selectAll('path')\n                        .data(countries.features)\n                        .enter().append('path')\n                        .attr('class', 'country')\n                        .attr('d', pathGenerator)\n                        .attr('id', d => d.iso_n3)\n                        .on('click', function(d) {\n                            const country = d.target.__data__.properties.name\n                            openModal(modal)\n                            const modalName = d3.select('#modal')\n                            modalName.select('h2').text(country)\n                            const cCode = data1[country] != undefined ? data1[country] : `No Data`\n                            const cName = data3[country] != undefined ? data3[country] : `No Data`\n                            data2.then((data) => {\n                                const value = data.results[cCode] != undefined ? data.results[cCode] : `No Data`\n                                if (value !== `No Data`) {\n                                    modalName.select('p3').text(`1 USD equals ${value.toFixed(2)} ${cCode}`)\n                                } else {\n                                    modalName.select('p3').text(`No conversion data to ${cCode}`)\n                                }\n                            })\n                            modalName.select('p1').text(`Currency Name: ${cName}`)\n                            modalName.select('p2').text(`Currency Code: ${cCode}`)\n                        })\n                        .append('title')\n                        .text(d => countryName[d.id])\n                });\n                const closeModalButtons = document.querySelectorAll('[data-close-button]')\n                    closeModalButtons.forEach(button => {\n                        button.addEventListener('click', () => {\n                            const modal = button.closest('.modal')\n                            closeModal(modal)\n                        })\n                    })\n            })\n        }\n        \n\n            ","import { renderMap } from \"./scripts/map\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    renderMap()\n\n    const instructions = document.getElementsByClassName('instructions-modal')\n        const openModalButtons = document.querySelectorAll('[data-modal-target]')\n        const closeModalButtons = document.querySelectorAll('[data-close-button]')\n        const overlay = document.getElementById('overlay')\n\n        openModalButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                const modal = document.querySelector(button.dataset.modalTarget)\n                openModal(modal)\n            })\n        })\n\n        overlay.addEventListener('click', () => {\n            const modals = document.querySelectorAll('.modal.active')\n            modals.forEach(modal => {\n                closeModal(modal)\n            })\n        })\n\n        closeModalButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                const modal = button.closest('.modal')\n    \n                closeModal(modal)\n            })\n        })\n\n        function openModal(modal) {\n            modal.classList.add('active')\n            overlay.classList.add('active')\n        }\n\n        function closeModal(modal) {\n            \n            modal.classList.remove('active')\n            overlay.classList.remove('active')\n        }\n    \n});"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","openModalButtons","document","querySelectorAll","closeModalButtons","openModal","modal","classList","add","closeModal","remove","forEach","button","addEventListener","getElementById","closest","data2","fetch","method","headers","accept","then","response","json","catch","err","console","error","data1","require","data3","renderMap","svg","d3","select","projection","geoMercator","scale","translate","width","pathGenerator","geoPath","tsv","tsvData","countryName","d","iso_n3","name","data","countries","topojson","feature","objects","selectAll","features","enter","append","attr","on","country","target","__data__","properties","modalName","text","cCode","cName","value","results","toFixed","id","getElementsByClassName","overlay","querySelector","dataset","modalTarget"],"sourceRoot":""}